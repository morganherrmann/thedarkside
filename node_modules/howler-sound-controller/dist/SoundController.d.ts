import { SoundLoader, Sound } from "./SoundLoader";
export interface SoundsIndex {
    [key: string]: Sound;
}
export interface Vector3D {
    x: number;
    y: number;
    z: number;
}
export interface PannerAttributes {
    coneInnerAngle?: number;
    coneOuterAngle?: number;
    coneOuterGain?: number;
    distanceModel?: 'inverse' | 'exponential' | 'linear';
    maxDistance?: number;
    refDistance?: number;
    rolloffFactor?: number;
    panningModel?: 'HRTF' | 'equalpower';
}
export declare class SoundController {
    private loader;
    private sounds;
    private backgroundName;
    private backgroundId;
    private backgroundVolume;
    constructor();
    getLoader(): SoundLoader;
    registerSounds(sounds: Array<Sound>): void;
    updateListener(position: Vector3D, orientation?: Vector3D, orientationUp?: Vector3D): void;
    getMasterVolume(): number;
    setMasterVolume(val: number): void;
    getBackgroundVolume(): number;
    setBackgroundVolume(val: number): void;
    playBackground(name: string | null, fadeOutTime?: number, fadeInTime?: number, smooth?: boolean): void;
    play(name: string): number;
    playSpatial(name: string, position: Vector3D, pannerAttr: PannerAttributes, orientation?: Vector3D): number;
    stop(name: string, id?: number): SoundController;
    get(name: string): Sound;
    getAll(): SoundsIndex;
}
